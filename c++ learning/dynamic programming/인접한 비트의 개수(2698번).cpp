#include <iostream>
using namespace std;
/*
 dp[n][k][0]=>n자리수에서 인접한 비트의 개수가 k개이면서 끝에 0으로 끝나는 경우를 생각하면
 dp[n-1][k][1]+dp[n-1][k][0]=> 인접한 비트의 개수가 k개이면서 1로 끝나는 경우와 0으로 끝나는 경우 둘다가 적용될 수 있다.(1,0),(0,0)인 경우이다.
 dp[n][k][1]=>n자리수에서 인접한 비트의 개수가 k개이면서 끝에 1로 끝나는 경우
 dp[n-1][k-1][1]+dp[n-1][k][0]=>인접한 비트의 개수가 k-1개이면서 1로 끝나는 경우 k개이면서 0으로 끝나는 경우(1,1),(0,1)인 경우...조건 생각.
 */
int dp[101][101][2];
int main(void){
    int T;
    cin>>T;
    dp[2][0][0]=2;
    dp[2][0][1]=1;
    dp[2][1][1]=1;
    for(int i=3;i<101;i++){
        dp[i][0][1]=dp[i-1][0][0];
        dp[i][0][0]=dp[i-1][0][0]+dp[i-1][0][1];
        for(int j=1;j<i;j++){
            dp[i][j][1]=dp[i-1][j-1][1]+dp[i-1][j][0];
            dp[i][j][0]=dp[i-1][j][0]+dp[i-1][j][1];
        }
    }
    for(int tc=1;tc<=T;tc++){
        int n,k;
        cin>>n>>k;
        cout<<dp[n][k][0]+dp[n][k][1]<<'\n';
    }
    return 0;
}
